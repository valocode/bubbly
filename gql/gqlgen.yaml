schema:
  - ent.graphql
  - schema.graphql

resolver:
  # Tell gqlgen to generate resolvers next to the schema file.
  layout: follow-schema
  dir: .

# gqlgen will search for any type names in the schema in the generated
# ent package. If they match it will use them, otherwise it will new ones.
autobind:
  - github.com/valocode/bubbly/ent

models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.IntID
  Node:
    model:
      # ent.Noder is the new interface generated by the Node template.
      - github.com/valocode/bubbly/ent.Noder
  ArtifactType:
    model:
      - github.com/valocode/bubbly/ent/artifact.Type
  EventType:
    model:
      - github.com/valocode/bubbly/ent/event.Type
  ReleaseStatus:
    model:
      - github.com/valocode/bubbly/ent/release.Status
  ReleasePolicyViolationSeverity:
    model:
      - github.com/valocode/bubbly/ent/releasepolicyviolation.Severity
  ReleasePolicyViolationType:
    model:
      - github.com/valocode/bubbly/ent/releasepolicyviolation.Type
  ReleaseComponentType:
    model:
      - github.com/valocode/bubbly/ent/releasecomponent.Type
  ReleaseEntryType:
    model:
      - github.com/valocode/bubbly/ent/releaseentry.Type
  CodeIssueSeverity:
    model:
      - github.com/valocode/bubbly/ent/codeissue.Severity
  CodeIssueType:
    model:
      - github.com/valocode/bubbly/ent/codeissue.Type
  VulnerabilitySeverity:
    model:
      - github.com/valocode/bubbly/ent/vulnerability.Severity
  VulnerabilityReviewDecision:
    model:
      - github.com/valocode/bubbly/ent/vulnerabilityreview.Decision

"""
GitCommitWhereInput is used for filtering GitCommit objects.
Input was generated by ent.
"""
input GitCommitWhereInput {
  not: GitCommitWhereInput
  and: [GitCommitWhereInput!]
  or: [GitCommitWhereInput!]
  
  """hash field predicates"""
  hash: String
  hashNEQ: String
  hashIn: [String!]
  hashNotIn: [String!]
  hashGT: String
  hashGTE: String
  hashLT: String
  hashLTE: String
  hashContains: String
  hashHasPrefix: String
  hashHasSuffix: String
  hashEqualFold: String
  hashContainsFold: String
  
  """branch field predicates"""
  branch: String
  branchNEQ: String
  branchIn: [String!]
  branchNotIn: [String!]
  branchGT: String
  branchGTE: String
  branchLT: String
  branchLTE: String
  branchContains: String
  branchHasPrefix: String
  branchHasSuffix: String
  branchEqualFold: String
  branchContainsFold: String
  
  """tag field predicates"""
  tag: String
  tagNEQ: String
  tagIn: [String!]
  tagNotIn: [String!]
  tagGT: String
  tagGTE: String
  tagLT: String
  tagLTE: String
  tagContains: String
  tagHasPrefix: String
  tagHasSuffix: String
  tagIsNil: Boolean
  tagNotNil: Boolean
  tagEqualFold: String
  tagContainsFold: String
  
  """time field predicates"""
  time: Time
  timeNEQ: Time
  timeIn: [Time!]
  timeNotIn: [Time!]
  timeGT: Time
  timeGTE: Time
  timeLT: Time
  timeLTE: Time
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """repo edge predicates"""
  hasRepo: Boolean
  hasRepoWith: [RepoWhereInput!]
  
  """release edge predicates"""
  hasRelease: Boolean
  hasReleaseWith: [ReleaseWhereInput!]
}

"""
OrganizationWhereInput is used for filtering Organization objects.
Input was generated by ent.
"""
input OrganizationWhereInput {
  not: OrganizationWhereInput
  and: [OrganizationWhereInput!]
  or: [OrganizationWhereInput!]
  
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """projects edge predicates"""
  hasProjects: Boolean
  hasProjectsWith: [ProjectWhereInput!]
  
  """repos edge predicates"""
  hasRepos: Boolean
  hasReposWith: [RepoWhereInput!]
}

"""
ReleasePolicyWhereInput is used for filtering ReleasePolicy objects.
Input was generated by ent.
"""
input ReleasePolicyWhereInput {
  not: ReleasePolicyWhereInput
  and: [ReleasePolicyWhereInput!]
  or: [ReleasePolicyWhereInput!]
  
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  
  """module field predicates"""
  module: String
  moduleNEQ: String
  moduleIn: [String!]
  moduleNotIn: [String!]
  moduleGT: String
  moduleGTE: String
  moduleLT: String
  moduleLTE: String
  moduleContains: String
  moduleHasPrefix: String
  moduleHasSuffix: String
  moduleEqualFold: String
  moduleContainsFold: String
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """owner edge predicates"""
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
  
  """projects edge predicates"""
  hasProjects: Boolean
  hasProjectsWith: [ProjectWhereInput!]
  
  """repos edge predicates"""
  hasRepos: Boolean
  hasReposWith: [RepoWhereInput!]
  
  """violations edge predicates"""
  hasViolations: Boolean
  hasViolationsWith: [ReleasePolicyViolationWhereInput!]
}

"""
ArtifactWhereInput is used for filtering Artifact objects.
Input was generated by ent.
"""
input ArtifactWhereInput {
  not: ArtifactWhereInput
  and: [ArtifactWhereInput!]
  or: [ArtifactWhereInput!]
  
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  
  """sha256 field predicates"""
  sha256: String
  sha256NEQ: String
  sha256In: [String!]
  sha256NotIn: [String!]
  sha256GT: String
  sha256GTE: String
  sha256LT: String
  sha256LTE: String
  sha256Contains: String
  sha256HasPrefix: String
  sha256HasSuffix: String
  sha256EqualFold: String
  sha256ContainsFold: String
  
  """type field predicates"""
  type: ArtifactType
  typeNEQ: ArtifactType
  typeIn: [ArtifactType!]
  typeNotIn: [ArtifactType!]
  
  """time field predicates"""
  time: Time
  timeNEQ: Time
  timeIn: [Time!]
  timeNotIn: [Time!]
  timeGT: Time
  timeGTE: Time
  timeLT: Time
  timeLTE: Time
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """release edge predicates"""
  hasRelease: Boolean
  hasReleaseWith: [ReleaseWhereInput!]
  
  """entry edge predicates"""
  hasEntry: Boolean
  hasEntryWith: [ReleaseEntryWhereInput!]
}

"""
ComponentWhereInput is used for filtering Component objects.
Input was generated by ent.
"""
input ComponentWhereInput {
  not: ComponentWhereInput
  and: [ComponentWhereInput!]
  or: [ComponentWhereInput!]
  
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  
  """vendor field predicates"""
  vendor: String
  vendorNEQ: String
  vendorIn: [String!]
  vendorNotIn: [String!]
  vendorGT: String
  vendorGTE: String
  vendorLT: String
  vendorLTE: String
  vendorContains: String
  vendorHasPrefix: String
  vendorHasSuffix: String
  vendorEqualFold: String
  vendorContainsFold: String
  
  """version field predicates"""
  version: String
  versionNEQ: String
  versionIn: [String!]
  versionNotIn: [String!]
  versionGT: String
  versionGTE: String
  versionLT: String
  versionLTE: String
  versionContains: String
  versionHasPrefix: String
  versionHasSuffix: String
  versionEqualFold: String
  versionContainsFold: String
  
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  
  """url field predicates"""
  url: String
  urlNEQ: String
  urlIn: [String!]
  urlNotIn: [String!]
  urlGT: String
  urlGTE: String
  urlLT: String
  urlLTE: String
  urlContains: String
  urlHasPrefix: String
  urlHasSuffix: String
  urlIsNil: Boolean
  urlNotNil: Boolean
  urlEqualFold: String
  urlContainsFold: String
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """owner edge predicates"""
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
  
  """vulnerabilities edge predicates"""
  hasVulnerabilities: Boolean
  hasVulnerabilitiesWith: [VulnerabilityWhereInput!]
  
  """licenses edge predicates"""
  hasLicenses: Boolean
  hasLicensesWith: [LicenseWhereInput!]
  
  """uses edge predicates"""
  hasUses: Boolean
  hasUsesWith: [ReleaseComponentWhereInput!]
}

"""
EventWhereInput is used for filtering Event objects.
Input was generated by ent.
"""
input EventWhereInput {
  not: EventWhereInput
  and: [EventWhereInput!]
  or: [EventWhereInput!]
  
  """message field predicates"""
  message: String
  messageNEQ: String
  messageIn: [String!]
  messageNotIn: [String!]
  messageGT: String
  messageGTE: String
  messageLT: String
  messageLTE: String
  messageContains: String
  messageHasPrefix: String
  messageHasSuffix: String
  messageEqualFold: String
  messageContainsFold: String
  
  """status field predicates"""
  status: EventStatus
  statusNEQ: EventStatus
  statusIn: [EventStatus!]
  statusNotIn: [EventStatus!]
  
  """type field predicates"""
  type: EventType
  typeNEQ: EventType
  typeIn: [EventType!]
  typeNotIn: [EventType!]
  
  """time field predicates"""
  time: Time
  timeNEQ: Time
  timeIn: [Time!]
  timeNotIn: [Time!]
  timeGT: Time
  timeGTE: Time
  timeLT: Time
  timeLTE: Time
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """release edge predicates"""
  hasRelease: Boolean
  hasReleaseWith: [ReleaseWhereInput!]
  
  """repo edge predicates"""
  hasRepo: Boolean
  hasRepoWith: [RepoWhereInput!]
  
  """project edge predicates"""
  hasProject: Boolean
  hasProjectWith: [ProjectWhereInput!]
}

"""
LicenseWhereInput is used for filtering License objects.
Input was generated by ent.
"""
input LicenseWhereInput {
  not: LicenseWhereInput
  and: [LicenseWhereInput!]
  or: [LicenseWhereInput!]
  
  """license_id field predicates"""
  licenseID: String
  licenseIDNEQ: String
  licenseIDIn: [String!]
  licenseIDNotIn: [String!]
  licenseIDGT: String
  licenseIDGTE: String
  licenseIDLT: String
  licenseIDLTE: String
  licenseIDContains: String
  licenseIDHasPrefix: String
  licenseIDHasSuffix: String
  licenseIDEqualFold: String
  licenseIDContainsFold: String
  
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameIsNil: Boolean
  nameNotNil: Boolean
  nameEqualFold: String
  nameContainsFold: String
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """owner edge predicates"""
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
  
  """spdx edge predicates"""
  hasSpdx: Boolean
  hasSpdxWith: [SPDXLicenseWhereInput!]
  
  """components edge predicates"""
  hasComponents: Boolean
  hasComponentsWith: [ComponentWhereInput!]
  
  """instances edge predicates"""
  hasInstances: Boolean
  hasInstancesWith: [ReleaseLicenseWhereInput!]
}

"""
ProjectWhereInput is used for filtering Project objects.
Input was generated by ent.
"""
input ProjectWhereInput {
  not: ProjectWhereInput
  and: [ProjectWhereInput!]
  or: [ProjectWhereInput!]
  
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """owner edge predicates"""
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
  
  """repos edge predicates"""
  hasRepos: Boolean
  hasReposWith: [RepoWhereInput!]
  
  """vulnerability_reviews edge predicates"""
  hasVulnerabilityReviews: Boolean
  hasVulnerabilityReviewsWith: [VulnerabilityReviewWhereInput!]
  
  """policies edge predicates"""
  hasPolicies: Boolean
  hasPoliciesWith: [ReleasePolicyWhereInput!]
}

"""
ReleasePolicyViolationWhereInput is used for filtering ReleasePolicyViolation objects.
Input was generated by ent.
"""
input ReleasePolicyViolationWhereInput {
  not: ReleasePolicyViolationWhereInput
  and: [ReleasePolicyViolationWhereInput!]
  or: [ReleasePolicyViolationWhereInput!]
  
  """message field predicates"""
  message: String
  messageNEQ: String
  messageIn: [String!]
  messageNotIn: [String!]
  messageGT: String
  messageGTE: String
  messageLT: String
  messageLTE: String
  messageContains: String
  messageHasPrefix: String
  messageHasSuffix: String
  messageEqualFold: String
  messageContainsFold: String
  
  """type field predicates"""
  type: ReleasePolicyViolationType
  typeNEQ: ReleasePolicyViolationType
  typeIn: [ReleasePolicyViolationType!]
  typeNotIn: [ReleasePolicyViolationType!]
  
  """severity field predicates"""
  severity: ReleasePolicyViolationSeverity
  severityNEQ: ReleasePolicyViolationSeverity
  severityIn: [ReleasePolicyViolationSeverity!]
  severityNotIn: [ReleasePolicyViolationSeverity!]
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """policy edge predicates"""
  hasPolicy: Boolean
  hasPolicyWith: [ReleasePolicyWhereInput!]
  
  """release edge predicates"""
  hasRelease: Boolean
  hasReleaseWith: [ReleaseWhereInput!]
}

"""
ReleaseVulnerabilityWhereInput is used for filtering ReleaseVulnerability objects.
Input was generated by ent.
"""
input ReleaseVulnerabilityWhereInput {
  not: ReleaseVulnerabilityWhereInput
  and: [ReleaseVulnerabilityWhereInput!]
  or: [ReleaseVulnerabilityWhereInput!]
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """vulnerability edge predicates"""
  hasVulnerability: Boolean
  hasVulnerabilityWith: [VulnerabilityWhereInput!]
  
  """component edge predicates"""
  hasComponent: Boolean
  hasComponentWith: [ReleaseComponentWhereInput!]
  
  """release edge predicates"""
  hasRelease: Boolean
  hasReleaseWith: [ReleaseWhereInput!]
  
  """reviews edge predicates"""
  hasReviews: Boolean
  hasReviewsWith: [VulnerabilityReviewWhereInput!]
  
  """scan edge predicates"""
  hasScan: Boolean
  hasScanWith: [CodeScanWhereInput!]
}

"""
RepoWhereInput is used for filtering Repo objects.
Input was generated by ent.
"""
input RepoWhereInput {
  not: RepoWhereInput
  and: [RepoWhereInput!]
  or: [RepoWhereInput!]
  
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  
  """default_branch field predicates"""
  defaultBranch: String
  defaultBranchNEQ: String
  defaultBranchIn: [String!]
  defaultBranchNotIn: [String!]
  defaultBranchGT: String
  defaultBranchGTE: String
  defaultBranchLT: String
  defaultBranchLTE: String
  defaultBranchContains: String
  defaultBranchHasPrefix: String
  defaultBranchHasSuffix: String
  defaultBranchEqualFold: String
  defaultBranchContainsFold: String
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """owner edge predicates"""
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
  
  """project edge predicates"""
  hasProject: Boolean
  hasProjectWith: [ProjectWhereInput!]
  
  """head edge predicates"""
  hasHead: Boolean
  hasHeadWith: [ReleaseWhereInput!]
  
  """commits edge predicates"""
  hasCommits: Boolean
  hasCommitsWith: [GitCommitWhereInput!]
  
  """vulnerability_reviews edge predicates"""
  hasVulnerabilityReviews: Boolean
  hasVulnerabilityReviewsWith: [VulnerabilityReviewWhereInput!]
  
  """policies edge predicates"""
  hasPolicies: Boolean
  hasPoliciesWith: [ReleasePolicyWhereInput!]
}

"""
CodeIssueWhereInput is used for filtering CodeIssue objects.
Input was generated by ent.
"""
input CodeIssueWhereInput {
  not: CodeIssueWhereInput
  and: [CodeIssueWhereInput!]
  or: [CodeIssueWhereInput!]
  
  """rule_id field predicates"""
  ruleID: String
  ruleIDNEQ: String
  ruleIDIn: [String!]
  ruleIDNotIn: [String!]
  ruleIDGT: String
  ruleIDGTE: String
  ruleIDLT: String
  ruleIDLTE: String
  ruleIDContains: String
  ruleIDHasPrefix: String
  ruleIDHasSuffix: String
  ruleIDEqualFold: String
  ruleIDContainsFold: String
  
  """message field predicates"""
  message: String
  messageNEQ: String
  messageIn: [String!]
  messageNotIn: [String!]
  messageGT: String
  messageGTE: String
  messageLT: String
  messageLTE: String
  messageContains: String
  messageHasPrefix: String
  messageHasSuffix: String
  messageEqualFold: String
  messageContainsFold: String
  
  """severity field predicates"""
  severity: CodeIssueSeverity
  severityNEQ: CodeIssueSeverity
  severityIn: [CodeIssueSeverity!]
  severityNotIn: [CodeIssueSeverity!]
  
  """type field predicates"""
  type: CodeIssueType
  typeNEQ: CodeIssueType
  typeIn: [CodeIssueType!]
  typeNotIn: [CodeIssueType!]
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """scan edge predicates"""
  hasScan: Boolean
  hasScanWith: [CodeScanWhereInput!]
}

"""
VulnerabilityReviewWhereInput is used for filtering VulnerabilityReview objects.
Input was generated by ent.
"""
input VulnerabilityReviewWhereInput {
  not: VulnerabilityReviewWhereInput
  and: [VulnerabilityReviewWhereInput!]
  or: [VulnerabilityReviewWhereInput!]
  
  """note field predicates"""
  note: String
  noteNEQ: String
  noteIn: [String!]
  noteNotIn: [String!]
  noteGT: String
  noteGTE: String
  noteLT: String
  noteLTE: String
  noteContains: String
  noteHasPrefix: String
  noteHasSuffix: String
  noteEqualFold: String
  noteContainsFold: String
  
  """decision field predicates"""
  decision: VulnerabilityReviewDecision
  decisionNEQ: VulnerabilityReviewDecision
  decisionIn: [VulnerabilityReviewDecision!]
  decisionNotIn: [VulnerabilityReviewDecision!]
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """vulnerability edge predicates"""
  hasVulnerability: Boolean
  hasVulnerabilityWith: [VulnerabilityWhereInput!]
  
  """projects edge predicates"""
  hasProjects: Boolean
  hasProjectsWith: [ProjectWhereInput!]
  
  """repos edge predicates"""
  hasRepos: Boolean
  hasReposWith: [RepoWhereInput!]
  
  """releases edge predicates"""
  hasReleases: Boolean
  hasReleasesWith: [ReleaseWhereInput!]
  
  """instances edge predicates"""
  hasInstances: Boolean
  hasInstancesWith: [ReleaseVulnerabilityWhereInput!]
}

"""
ReleaseLicenseWhereInput is used for filtering ReleaseLicense objects.
Input was generated by ent.
"""
input ReleaseLicenseWhereInput {
  not: ReleaseLicenseWhereInput
  and: [ReleaseLicenseWhereInput!]
  or: [ReleaseLicenseWhereInput!]
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """license edge predicates"""
  hasLicense: Boolean
  hasLicenseWith: [LicenseWhereInput!]
  
  """component edge predicates"""
  hasComponent: Boolean
  hasComponentWith: [ReleaseComponentWhereInput!]
  
  """release edge predicates"""
  hasRelease: Boolean
  hasReleaseWith: [ReleaseWhereInput!]
  
  """scans edge predicates"""
  hasScans: Boolean
  hasScansWith: [CodeScanWhereInput!]
}

"""
VulnerabilityWhereInput is used for filtering Vulnerability objects.
Input was generated by ent.
"""
input VulnerabilityWhereInput {
  not: VulnerabilityWhereInput
  and: [VulnerabilityWhereInput!]
  or: [VulnerabilityWhereInput!]
  
  """vid field predicates"""
  vid: String
  vidNEQ: String
  vidIn: [String!]
  vidNotIn: [String!]
  vidGT: String
  vidGTE: String
  vidLT: String
  vidLTE: String
  vidContains: String
  vidHasPrefix: String
  vidHasSuffix: String
  vidEqualFold: String
  vidContainsFold: String
  
  """summary field predicates"""
  summary: String
  summaryNEQ: String
  summaryIn: [String!]
  summaryNotIn: [String!]
  summaryGT: String
  summaryGTE: String
  summaryLT: String
  summaryLTE: String
  summaryContains: String
  summaryHasPrefix: String
  summaryHasSuffix: String
  summaryIsNil: Boolean
  summaryNotNil: Boolean
  summaryEqualFold: String
  summaryContainsFold: String
  
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionIsNil: Boolean
  descriptionNotNil: Boolean
  descriptionEqualFold: String
  descriptionContainsFold: String
  
  """severity_score field predicates"""
  severityScore: Float
  severityScoreNEQ: Float
  severityScoreIn: [Float!]
  severityScoreNotIn: [Float!]
  severityScoreGT: Float
  severityScoreGTE: Float
  severityScoreLT: Float
  severityScoreLTE: Float
  
  """severity field predicates"""
  severity: VulnerabilitySeverity
  severityNEQ: VulnerabilitySeverity
  severityIn: [VulnerabilitySeverity!]
  severityNotIn: [VulnerabilitySeverity!]
  
  """published field predicates"""
  published: Time
  publishedNEQ: Time
  publishedIn: [Time!]
  publishedNotIn: [Time!]
  publishedGT: Time
  publishedGTE: Time
  publishedLT: Time
  publishedLTE: Time
  publishedIsNil: Boolean
  publishedNotNil: Boolean
  
  """modified field predicates"""
  modified: Time
  modifiedNEQ: Time
  modifiedIn: [Time!]
  modifiedNotIn: [Time!]
  modifiedGT: Time
  modifiedGTE: Time
  modifiedLT: Time
  modifiedLTE: Time
  modifiedIsNil: Boolean
  modifiedNotNil: Boolean
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """owner edge predicates"""
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
  
  """components edge predicates"""
  hasComponents: Boolean
  hasComponentsWith: [ComponentWhereInput!]
  
  """reviews edge predicates"""
  hasReviews: Boolean
  hasReviewsWith: [VulnerabilityReviewWhereInput!]
  
  """instances edge predicates"""
  hasInstances: Boolean
  hasInstancesWith: [ReleaseVulnerabilityWhereInput!]
}

"""
CodeScanWhereInput is used for filtering CodeScan objects.
Input was generated by ent.
"""
input CodeScanWhereInput {
  not: CodeScanWhereInput
  and: [CodeScanWhereInput!]
  or: [CodeScanWhereInput!]
  
  """tool field predicates"""
  tool: String
  toolNEQ: String
  toolIn: [String!]
  toolNotIn: [String!]
  toolGT: String
  toolGTE: String
  toolLT: String
  toolLTE: String
  toolContains: String
  toolHasPrefix: String
  toolHasSuffix: String
  toolEqualFold: String
  toolContainsFold: String
  
  """time field predicates"""
  time: Time
  timeNEQ: Time
  timeIn: [Time!]
  timeNotIn: [Time!]
  timeGT: Time
  timeGTE: Time
  timeLT: Time
  timeLTE: Time
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """release edge predicates"""
  hasRelease: Boolean
  hasReleaseWith: [ReleaseWhereInput!]
  
  """entry edge predicates"""
  hasEntry: Boolean
  hasEntryWith: [ReleaseEntryWhereInput!]
  
  """issues edge predicates"""
  hasIssues: Boolean
  hasIssuesWith: [CodeIssueWhereInput!]
  
  """vulnerabilities edge predicates"""
  hasVulnerabilities: Boolean
  hasVulnerabilitiesWith: [ReleaseVulnerabilityWhereInput!]
  
  """licenses edge predicates"""
  hasLicenses: Boolean
  hasLicensesWith: [ReleaseLicenseWhereInput!]
  
  """components edge predicates"""
  hasComponents: Boolean
  hasComponentsWith: [ReleaseComponentWhereInput!]
}

"""
LicenseUseWhereInput is used for filtering LicenseUse objects.
Input was generated by ent.
"""
input LicenseUseWhereInput {
  not: LicenseUseWhereInput
  and: [LicenseUseWhereInput!]
  or: [LicenseUseWhereInput!]
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """license edge predicates"""
  hasLicense: Boolean
  hasLicenseWith: [LicenseWhereInput!]
}

"""
ReleaseWhereInput is used for filtering Release objects.
Input was generated by ent.
"""
input ReleaseWhereInput {
  not: ReleaseWhereInput
  and: [ReleaseWhereInput!]
  or: [ReleaseWhereInput!]
  
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  
  """version field predicates"""
  version: String
  versionNEQ: String
  versionIn: [String!]
  versionNotIn: [String!]
  versionGT: String
  versionGTE: String
  versionLT: String
  versionLTE: String
  versionContains: String
  versionHasPrefix: String
  versionHasSuffix: String
  versionEqualFold: String
  versionContainsFold: String
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """subreleases edge predicates"""
  hasSubreleases: Boolean
  hasSubreleasesWith: [ReleaseWhereInput!]
  
  """dependencies edge predicates"""
  hasDependencies: Boolean
  hasDependenciesWith: [ReleaseWhereInput!]
  
  """commit edge predicates"""
  hasCommit: Boolean
  hasCommitWith: [GitCommitWhereInput!]
  
  """head_of edge predicates"""
  hasHeadOf: Boolean
  hasHeadOfWith: [RepoWhereInput!]
  
  """log edge predicates"""
  hasLog: Boolean
  hasLogWith: [ReleaseEntryWhereInput!]
  
  """violations edge predicates"""
  hasViolations: Boolean
  hasViolationsWith: [ReleasePolicyViolationWhereInput!]
  
  """artifacts edge predicates"""
  hasArtifacts: Boolean
  hasArtifactsWith: [ArtifactWhereInput!]
  
  """components edge predicates"""
  hasComponents: Boolean
  hasComponentsWith: [ReleaseComponentWhereInput!]
  
  """vulnerabilities edge predicates"""
  hasVulnerabilities: Boolean
  hasVulnerabilitiesWith: [ReleaseVulnerabilityWhereInput!]
  
  """licenses edge predicates"""
  hasLicenses: Boolean
  hasLicensesWith: [ReleaseLicenseWhereInput!]
  
  """code_scans edge predicates"""
  hasCodeScans: Boolean
  hasCodeScansWith: [CodeScanWhereInput!]
  
  """test_runs edge predicates"""
  hasTestRuns: Boolean
  hasTestRunsWith: [TestRunWhereInput!]
  
  """vulnerability_reviews edge predicates"""
  hasVulnerabilityReviews: Boolean
  hasVulnerabilityReviewsWith: [VulnerabilityReviewWhereInput!]
}

"""
ReleaseComponentWhereInput is used for filtering ReleaseComponent objects.
Input was generated by ent.
"""
input ReleaseComponentWhereInput {
  not: ReleaseComponentWhereInput
  and: [ReleaseComponentWhereInput!]
  or: [ReleaseComponentWhereInput!]
  
  """type field predicates"""
  type: ReleaseComponentType
  typeNEQ: ReleaseComponentType
  typeIn: [ReleaseComponentType!]
  typeNotIn: [ReleaseComponentType!]
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """release edge predicates"""
  hasRelease: Boolean
  hasReleaseWith: [ReleaseWhereInput!]
  
  """scans edge predicates"""
  hasScans: Boolean
  hasScansWith: [CodeScanWhereInput!]
  
  """component edge predicates"""
  hasComponent: Boolean
  hasComponentWith: [ComponentWhereInput!]
  
  """vulnerabilities edge predicates"""
  hasVulnerabilities: Boolean
  hasVulnerabilitiesWith: [ReleaseVulnerabilityWhereInput!]
  
  """licenses edge predicates"""
  hasLicenses: Boolean
  hasLicensesWith: [ReleaseLicenseWhereInput!]
}

"""
ReleaseEntryWhereInput is used for filtering ReleaseEntry objects.
Input was generated by ent.
"""
input ReleaseEntryWhereInput {
  not: ReleaseEntryWhereInput
  and: [ReleaseEntryWhereInput!]
  or: [ReleaseEntryWhereInput!]
  
  """type field predicates"""
  type: ReleaseEntryType
  typeNEQ: ReleaseEntryType
  typeIn: [ReleaseEntryType!]
  typeNotIn: [ReleaseEntryType!]
  
  """time field predicates"""
  time: Time
  timeNEQ: Time
  timeIn: [Time!]
  timeNotIn: [Time!]
  timeGT: Time
  timeGTE: Time
  timeLT: Time
  timeLTE: Time
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """artifact edge predicates"""
  hasArtifact: Boolean
  hasArtifactWith: [ArtifactWhereInput!]
  
  """code_scan edge predicates"""
  hasCodeScan: Boolean
  hasCodeScanWith: [CodeScanWhereInput!]
  
  """test_run edge predicates"""
  hasTestRun: Boolean
  hasTestRunWith: [TestRunWhereInput!]
  
  """release edge predicates"""
  hasRelease: Boolean
  hasReleaseWith: [ReleaseWhereInput!]
}

"""
TestCaseWhereInput is used for filtering TestCase objects.
Input was generated by ent.
"""
input TestCaseWhereInput {
  not: TestCaseWhereInput
  and: [TestCaseWhereInput!]
  or: [TestCaseWhereInput!]
  
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  
  """result field predicates"""
  result: Boolean
  resultNEQ: Boolean
  
  """message field predicates"""
  message: String
  messageNEQ: String
  messageIn: [String!]
  messageNotIn: [String!]
  messageGT: String
  messageGTE: String
  messageLT: String
  messageLTE: String
  messageContains: String
  messageHasPrefix: String
  messageHasSuffix: String
  messageEqualFold: String
  messageContainsFold: String
  
  """elapsed field predicates"""
  elapsed: Float
  elapsedNEQ: Float
  elapsedIn: [Float!]
  elapsedNotIn: [Float!]
  elapsedGT: Float
  elapsedGTE: Float
  elapsedLT: Float
  elapsedLTE: Float
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """run edge predicates"""
  hasRun: Boolean
  hasRunWith: [TestRunWhereInput!]
}

"""
TestRunWhereInput is used for filtering TestRun objects.
Input was generated by ent.
"""
input TestRunWhereInput {
  not: TestRunWhereInput
  and: [TestRunWhereInput!]
  or: [TestRunWhereInput!]
  
  """tool field predicates"""
  tool: String
  toolNEQ: String
  toolIn: [String!]
  toolNotIn: [String!]
  toolGT: String
  toolGTE: String
  toolLT: String
  toolLTE: String
  toolContains: String
  toolHasPrefix: String
  toolHasSuffix: String
  toolEqualFold: String
  toolContainsFold: String
  
  """time field predicates"""
  time: Time
  timeNEQ: Time
  timeIn: [Time!]
  timeNotIn: [Time!]
  timeGT: Time
  timeGTE: Time
  timeLT: Time
  timeLTE: Time
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """release edge predicates"""
  hasRelease: Boolean
  hasReleaseWith: [ReleaseWhereInput!]
  
  """entry edge predicates"""
  hasEntry: Boolean
  hasEntryWith: [ReleaseEntryWhereInput!]
  
  """tests edge predicates"""
  hasTests: Boolean
  hasTestsWith: [TestCaseWhereInput!]
}

"""
AdapterWhereInput is used for filtering Adapter objects.
Input was generated by ent.
"""
input AdapterWhereInput {
  not: AdapterWhereInput
  and: [AdapterWhereInput!]
  or: [AdapterWhereInput!]
  
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  
  """tag field predicates"""
  tag: String
  tagNEQ: String
  tagIn: [String!]
  tagNotIn: [String!]
  tagGT: String
  tagGTE: String
  tagLT: String
  tagLTE: String
  tagContains: String
  tagHasPrefix: String
  tagHasSuffix: String
  tagEqualFold: String
  tagContainsFold: String
  
  """module field predicates"""
  module: String
  moduleNEQ: String
  moduleIn: [String!]
  moduleNotIn: [String!]
  moduleGT: String
  moduleGTE: String
  moduleLT: String
  moduleLTE: String
  moduleContains: String
  moduleHasPrefix: String
  moduleHasSuffix: String
  moduleEqualFold: String
  moduleContainsFold: String
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """owner edge predicates"""
  hasOwner: Boolean
  hasOwnerWith: [OrganizationWhereInput!]
}

"""
SPDXLicenseWhereInput is used for filtering SPDXLicense objects.
Input was generated by ent.
"""
input SPDXLicenseWhereInput {
  not: SPDXLicenseWhereInput
  and: [SPDXLicenseWhereInput!]
  or: [SPDXLicenseWhereInput!]
  
  """license_id field predicates"""
  licenseID: String
  licenseIDNEQ: String
  licenseIDIn: [String!]
  licenseIDNotIn: [String!]
  licenseIDGT: String
  licenseIDGTE: String
  licenseIDLT: String
  licenseIDLTE: String
  licenseIDContains: String
  licenseIDHasPrefix: String
  licenseIDHasSuffix: String
  licenseIDEqualFold: String
  licenseIDContainsFold: String
  
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  
  """reference field predicates"""
  reference: String
  referenceNEQ: String
  referenceIn: [String!]
  referenceNotIn: [String!]
  referenceGT: String
  referenceGTE: String
  referenceLT: String
  referenceLTE: String
  referenceContains: String
  referenceHasPrefix: String
  referenceHasSuffix: String
  referenceIsNil: Boolean
  referenceNotNil: Boolean
  referenceEqualFold: String
  referenceContainsFold: String
  
  """details_url field predicates"""
  detailsURL: String
  detailsURLNEQ: String
  detailsURLIn: [String!]
  detailsURLNotIn: [String!]
  detailsURLGT: String
  detailsURLGTE: String
  detailsURLLT: String
  detailsURLLTE: String
  detailsURLContains: String
  detailsURLHasPrefix: String
  detailsURLHasSuffix: String
  detailsURLIsNil: Boolean
  detailsURLNotNil: Boolean
  detailsURLEqualFold: String
  detailsURLContainsFold: String
  
  """is_osi_approved field predicates"""
  isOsiApproved: Boolean
  isOsiApprovedNEQ: Boolean
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
}

package schema

import (
	"entgo.io/contrib/entgql"
	"entgo.io/ent"
	"entgo.io/ent/dialect/entsql"
	"entgo.io/ent/schema"
	"entgo.io/ent/schema/edge"
	"entgo.io/ent/schema/field"
)

// VulnerabilityReview is used to review whether a vulnerability is relevant to
// a release, repository or project scope
type VulnerabilityReview struct {
	ent.Schema
}

func (VulnerabilityReview) Annotations() []schema.Annotation {
	return []schema.Annotation{
		entsql.Annotation{Table: "vulnerability_review"},
	}
}

func (VulnerabilityReview) Fields() []ent.Field {
	return []ent.Field{
		field.String("name").NotEmpty().
			Annotations(
				entgql.OrderField("name"),
			),
		field.Enum("decision").
			Values("exploitable", "in_progress", "invalid", "mitigated", "ineffective").
			Default("exploitable"),
	}
}

func (VulnerabilityReview) Edges() []ent.Edge {
	return []ent.Edge{
		edge.To("vulnerability", Vulnerability.Type).Unique().Required(),
		edge.To("projects", Project.Type),
		edge.To("repos", Repo.Type),
		edge.To("releases", Release.Type),

		edge.From("instances", ReleaseVulnerability.Type).Ref("reviews"),
	}
}

// Code generated by entc, DO NOT EDIT.

package ent

import "github.com/hashicorp/hcl/v2"

const (
	attributeNodeOperation = "_operation"
	attributeNodeRef       = "ref"
	blockNodeDisjoint      = "_disjoint"
)

type HCLBodySpec struct {
	Attributes []hcl.AttributeSchema
	Blocks     []HCLBlockSpec
}

func (b HCLBodySpec) Schema() *hcl.BodySchema {
	var blocks = make([]hcl.BlockHeaderSchema, len(b.Blocks))
	for i, block := range b.Blocks {
		blocks[i] = block.BlockHeaderSchema
	}
	return &hcl.BodySchema{
		Attributes: b.Attributes,
		Blocks:     blocks,
	}
}

type HCLBlockSpec struct {
	hcl.BlockHeaderSchema
	// MinItems and MaxItems define the lower and upper limits on the number of
	// blocks allowed of the given type. If both are left at zero, no limit is applied.
	MinItems, MaxItems int
}

var AllDataNodesSchema = HCLBodySpec{
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "artifact"},
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "cwe"},
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "code_issue"},
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "code_scan"},
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "component"},
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "commit"},
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "license"},
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "license_use"},
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "project"},
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release"},
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release_component"},
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release_entry"},
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release_vulnerability"},
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "repo"},
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "test_case"},
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "test_run"},
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "vulnerability"},
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "vulnerability_review"},
		},
	},
}
var ArtifactBodySpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: "_operation",
		},
		{
			Name: "name",
		},
		{
			Name: "sha256",
		},
		{
			Name: "type",
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: blockNodeDisjoint},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "entry"},
			MaxItems:          1,
		},
	},
}
var ArtifactEdgeReleaseSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release"},
			MaxItems:          1,
		},
	},
}
var ArtifactEdgeEntrySpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release_entry"},
			MaxItems:          1,
		},
	},
}
var CWEBodySpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: "_operation",
		},
		{
			Name: "cwe_id",
		},
		{
			Name: "description",
		},
		{
			Name: "url",
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: blockNodeDisjoint},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "issues"},
			MaxItems:          1,
		},
	},
}
var CWEEdgeIssuesSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "code_issue"},
		},
	},
}
var CodeIssueBodySpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: "_operation",
		},
		{
			Name: "rule_id",
		},
		{
			Name: "message",
		},
		{
			Name: "severity",
		},
		{
			Name: "type",
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: blockNodeDisjoint},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "cwe"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "scan"},
			MaxItems:          1,
		},
	},
}
var CodeIssueEdgeCweSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "cwe"},
		},
	},
}
var CodeIssueEdgeScanSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "code_scan"},
			MaxItems:          1,
		},
	},
}
var CodeScanBodySpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: "_operation",
		},
		{
			Name: "tool",
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: blockNodeDisjoint},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "entry"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "issues"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "vulnerabilities"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "components"},
			MaxItems:          1,
		},
	},
}
var CodeScanEdgeReleaseSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release"},
			MaxItems:          1,
		},
	},
}
var CodeScanEdgeEntrySpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release_entry"},
			MaxItems:          1,
		},
	},
}
var CodeScanEdgeIssuesSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "code_issue"},
		},
	},
}
var CodeScanEdgeVulnerabilitiesSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release_vulnerability"},
		},
	},
}
var CodeScanEdgeComponentsSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release_component"},
		},
	},
}
var ComponentBodySpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: "_operation",
		},
		{
			Name: "name",
		},
		{
			Name: "vendor",
		},
		{
			Name: "version",
		},
		{
			Name: "description",
		},
		{
			Name: "url",
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: blockNodeDisjoint},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "vulnerabilities"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "licenses"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "uses"},
			MaxItems:          1,
		},
	},
}
var ComponentEdgeVulnerabilitiesSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "vulnerability"},
		},
	},
}
var ComponentEdgeLicensesSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "license"},
		},
	},
}
var ComponentEdgeUsesSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release_component"},
		},
	},
}
var GitCommitBodySpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: "_operation",
		},
		{
			Name: "hash",
		},
		{
			Name: "branch",
		},
		{
			Name: "tag",
		},
		{
			Name: "time",
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: blockNodeDisjoint},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "repo"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release"},
			MaxItems:          1,
		},
	},
}
var GitCommitEdgeRepoSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "repo"},
			MaxItems:          1,
		},
	},
}
var GitCommitEdgeReleaseSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release"},
			MaxItems:          1,
		},
	},
}
var LicenseBodySpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: "_operation",
		},
		{
			Name: "spdx_id",
		},
		{
			Name: "name",
		},
		{
			Name: "reference",
		},
		{
			Name: "details_url",
		},
		{
			Name: "is_osi_approved",
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: blockNodeDisjoint},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "components"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "uses"},
			MaxItems:          1,
		},
	},
}
var LicenseEdgeComponentsSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "component"},
		},
	},
}
var LicenseEdgeUsesSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "license_use"},
		},
	},
}
var LicenseUseBodySpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: "_operation",
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: blockNodeDisjoint},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "license"},
			MaxItems:          1,
		},
	},
}
var LicenseUseEdgeLicenseSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "license"},
			MaxItems:          1,
		},
	},
}
var ProjectBodySpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: "_operation",
		},
		{
			Name: "name",
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: blockNodeDisjoint},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "repos"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "releases"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "vulnerability_reviews"},
			MaxItems:          1,
		},
	},
}
var ProjectEdgeReposSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "repo"},
		},
	},
}
var ProjectEdgeReleasesSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release"},
		},
	},
}
var ProjectEdgeVulnerabilityReviewsSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "vulnerability_review"},
		},
	},
}
var ReleaseBodySpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: "_operation",
		},
		{
			Name: "name",
		},
		{
			Name: "version",
		},
		{
			Name: "status",
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: blockNodeDisjoint},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "subreleases"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "dependencies"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "project"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "commit"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "log"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "artifacts"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "components"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "vulnerabilities"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "code_scans"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "test_runs"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "vulnerability_reviews"},
			MaxItems:          1,
		},
	},
}
var ReleaseEdgeSubreleasesSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release"},
		},
	},
}
var ReleaseEdgeDependenciesSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release"},
		},
	},
}
var ReleaseEdgeProjectSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "project"},
			MaxItems:          1,
		},
	},
}
var ReleaseEdgeCommitSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "commit"},
			MaxItems:          1,
		},
	},
}
var ReleaseEdgeLogSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release_entry"},
		},
	},
}
var ReleaseEdgeArtifactsSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "artifact"},
		},
	},
}
var ReleaseEdgeComponentsSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release_component"},
		},
	},
}
var ReleaseEdgeVulnerabilitiesSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release_vulnerability"},
		},
	},
}
var ReleaseEdgeCodeScansSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "code_scan"},
		},
	},
}
var ReleaseEdgeTestRunsSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "test_run"},
		},
	},
}
var ReleaseEdgeVulnerabilityReviewsSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "vulnerability_review"},
		},
	},
}
var ReleaseComponentBodySpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: "_operation",
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: blockNodeDisjoint},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "scans"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "component"},
			MaxItems:          1,
		},
	},
}
var ReleaseComponentEdgeReleaseSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release"},
			MaxItems:          1,
		},
	},
}
var ReleaseComponentEdgeScansSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "code_scan"},
		},
	},
}
var ReleaseComponentEdgeComponentSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "component"},
			MaxItems:          1,
		},
	},
}
var ReleaseEntryBodySpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: "_operation",
		},
		{
			Name: "type",
		},
		{
			Name: "time",
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: blockNodeDisjoint},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "artifact"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "code_scan"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "test_run"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release"},
			MaxItems:          1,
		},
	},
}
var ReleaseEntryEdgeArtifactSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "artifact"},
			MaxItems:          1,
		},
	},
}
var ReleaseEntryEdgeCodeScanSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "code_scan"},
			MaxItems:          1,
		},
	},
}
var ReleaseEntryEdgeTestRunSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "test_run"},
			MaxItems:          1,
		},
	},
}
var ReleaseEntryEdgeReleaseSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release"},
			MaxItems:          1,
		},
	},
}
var ReleaseVulnerabilityBodySpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: "_operation",
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: blockNodeDisjoint},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "vulnerability"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "reviews"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "scans"},
			MaxItems:          1,
		},
	},
}
var ReleaseVulnerabilityEdgeVulnerabilitySpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "vulnerability"},
			MaxItems:          1,
		},
	},
}
var ReleaseVulnerabilityEdgeReleaseSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release"},
			MaxItems:          1,
		},
	},
}
var ReleaseVulnerabilityEdgeReviewsSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "vulnerability_review"},
		},
	},
}
var ReleaseVulnerabilityEdgeScansSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "code_scan"},
		},
	},
}
var RepoBodySpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: "_operation",
		},
		{
			Name: "name",
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: blockNodeDisjoint},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "project"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "commits"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "vulnerability_reviews"},
			MaxItems:          1,
		},
	},
}
var RepoEdgeProjectSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "project"},
			MaxItems:          1,
		},
	},
}
var RepoEdgeCommitsSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "commit"},
		},
	},
}
var RepoEdgeVulnerabilityReviewsSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "vulnerability_review"},
		},
	},
}
var TestCaseBodySpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: "_operation",
		},
		{
			Name: "name",
		},
		{
			Name: "result",
		},
		{
			Name: "message",
		},
		{
			Name: "elapsed",
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: blockNodeDisjoint},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "run"},
			MaxItems:          1,
		},
	},
}
var TestCaseEdgeRunSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "test_run"},
			MaxItems:          1,
		},
	},
}
var TestRunBodySpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: "_operation",
		},
		{
			Name: "tool",
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: blockNodeDisjoint},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "entry"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "tests"},
			MaxItems:          1,
		},
	},
}
var TestRunEdgeReleaseSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release"},
			MaxItems:          1,
		},
	},
}
var TestRunEdgeEntrySpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release_entry"},
			MaxItems:          1,
		},
	},
}
var TestRunEdgeTestsSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "test_case"},
		},
	},
}
var VulnerabilityBodySpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: "_operation",
		},
		{
			Name: "vid",
		},
		{
			Name: "summary",
		},
		{
			Name: "description",
		},
		{
			Name: "severity_score",
		},
		{
			Name: "severity",
		},
		{
			Name: "published",
		},
		{
			Name: "modified",
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: blockNodeDisjoint},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "components"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "reviews"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "instances"},
			MaxItems:          1,
		},
	},
}
var VulnerabilityEdgeComponentsSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "component"},
		},
	},
}
var VulnerabilityEdgeReviewsSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "vulnerability_review"},
		},
	},
}
var VulnerabilityEdgeInstancesSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release_vulnerability"},
		},
	},
}
var VulnerabilityReviewBodySpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: "_operation",
		},
		{
			Name: "name",
		},
		{
			Name: "decision",
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: blockNodeDisjoint},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "vulnerability"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "projects"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "repos"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "releases"},
			MaxItems:          1,
		},
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "instances"},
			MaxItems:          1,
		},
	},
}
var VulnerabilityReviewEdgeVulnerabilitySpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "vulnerability"},
			MaxItems:          1,
		},
	},
}
var VulnerabilityReviewEdgeProjectsSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "project"},
		},
	},
}
var VulnerabilityReviewEdgeReposSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "repo"},
		},
	},
}
var VulnerabilityReviewEdgeReleasesSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release"},
		},
	},
}
var VulnerabilityReviewEdgeInstancesSpec = HCLBodySpec{
	Attributes: []hcl.AttributeSchema{
		{
			Name: attributeNodeRef,
		},
	},
	Blocks: []HCLBlockSpec{
		{
			BlockHeaderSchema: hcl.BlockHeaderSchema{Type: "release_vulnerability"},
		},
	},
}

var DataEdgeSchemas = map[string]map[string]*HCLBodySpec{
	"artifact": {
		"release": &ArtifactEdgeReleaseSpec,
		"entry":   &ArtifactEdgeEntrySpec,
	},
	"cwe": {
		"issues": &CWEEdgeIssuesSpec,
	},
	"code_issue": {
		"cwe":  &CodeIssueEdgeCweSpec,
		"scan": &CodeIssueEdgeScanSpec,
	},
	"code_scan": {
		"release":         &CodeScanEdgeReleaseSpec,
		"entry":           &CodeScanEdgeEntrySpec,
		"issues":          &CodeScanEdgeIssuesSpec,
		"vulnerabilities": &CodeScanEdgeVulnerabilitiesSpec,
		"components":      &CodeScanEdgeComponentsSpec,
	},
	"component": {
		"vulnerabilities": &ComponentEdgeVulnerabilitiesSpec,
		"licenses":        &ComponentEdgeLicensesSpec,
		"uses":            &ComponentEdgeUsesSpec,
	},
	"commit": {
		"repo":    &GitCommitEdgeRepoSpec,
		"release": &GitCommitEdgeReleaseSpec,
	},
	"license": {
		"components": &LicenseEdgeComponentsSpec,
		"uses":       &LicenseEdgeUsesSpec,
	},
	"license_use": {
		"license": &LicenseUseEdgeLicenseSpec,
	},
	"project": {
		"repos":                 &ProjectEdgeReposSpec,
		"releases":              &ProjectEdgeReleasesSpec,
		"vulnerability_reviews": &ProjectEdgeVulnerabilityReviewsSpec,
	},
	"release": {
		"subreleases":           &ReleaseEdgeSubreleasesSpec,
		"dependencies":          &ReleaseEdgeDependenciesSpec,
		"project":               &ReleaseEdgeProjectSpec,
		"commit":                &ReleaseEdgeCommitSpec,
		"log":                   &ReleaseEdgeLogSpec,
		"artifacts":             &ReleaseEdgeArtifactsSpec,
		"components":            &ReleaseEdgeComponentsSpec,
		"vulnerabilities":       &ReleaseEdgeVulnerabilitiesSpec,
		"code_scans":            &ReleaseEdgeCodeScansSpec,
		"test_runs":             &ReleaseEdgeTestRunsSpec,
		"vulnerability_reviews": &ReleaseEdgeVulnerabilityReviewsSpec,
	},
	"release_component": {
		"release":   &ReleaseComponentEdgeReleaseSpec,
		"scans":     &ReleaseComponentEdgeScansSpec,
		"component": &ReleaseComponentEdgeComponentSpec,
	},
	"release_entry": {
		"artifact":  &ReleaseEntryEdgeArtifactSpec,
		"code_scan": &ReleaseEntryEdgeCodeScanSpec,
		"test_run":  &ReleaseEntryEdgeTestRunSpec,
		"release":   &ReleaseEntryEdgeReleaseSpec,
	},
	"release_vulnerability": {
		"vulnerability": &ReleaseVulnerabilityEdgeVulnerabilitySpec,
		"release":       &ReleaseVulnerabilityEdgeReleaseSpec,
		"reviews":       &ReleaseVulnerabilityEdgeReviewsSpec,
		"scans":         &ReleaseVulnerabilityEdgeScansSpec,
	},
	"repo": {
		"project":               &RepoEdgeProjectSpec,
		"commits":               &RepoEdgeCommitsSpec,
		"vulnerability_reviews": &RepoEdgeVulnerabilityReviewsSpec,
	},
	"test_case": {
		"run": &TestCaseEdgeRunSpec,
	},
	"test_run": {
		"release": &TestRunEdgeReleaseSpec,
		"entry":   &TestRunEdgeEntrySpec,
		"tests":   &TestRunEdgeTestsSpec,
	},
	"vulnerability": {
		"components": &VulnerabilityEdgeComponentsSpec,
		"reviews":    &VulnerabilityEdgeReviewsSpec,
		"instances":  &VulnerabilityEdgeInstancesSpec,
	},
	"vulnerability_review": {
		"vulnerability": &VulnerabilityReviewEdgeVulnerabilitySpec,
		"projects":      &VulnerabilityReviewEdgeProjectsSpec,
		"repos":         &VulnerabilityReviewEdgeReposSpec,
		"releases":      &VulnerabilityReviewEdgeReleasesSpec,
		"instances":     &VulnerabilityReviewEdgeInstancesSpec,
	},
}

var RequiredEdges = map[string]map[string]string{
	"artifact": {},
	"cwe":      {},
	"code_issue": {
		"scan": "issues",
	},
	"code_scan": {
		"release": "code_scans",
	},
	"component": {},
	"commit": {
		"repo": "commits",
	},
	"license": {},
	"license_use": {
		"license": "uses",
	},
	"project": {},
	"release": {
		"project": "releases",
		"commit":  "release",
	},
	"release_component": {
		"release":   "components",
		"scans":     "components",
		"component": "uses",
	},
	"release_entry": {
		"release": "log",
	},
	"release_vulnerability": {
		"vulnerability": "instances",
		"release":       "vulnerabilities",
	},
	"repo": {},
	"test_case": {
		"run": "tests",
	},
	"test_run": {
		"release": "test_runs",
	},
	"vulnerability": {},
	"vulnerability_review": {
		"vulnerability": "reviews",
	},
}

var RefDataEdges = map[string]map[string]string{
	"artifact": {
		"release": "artifacts",
		"entry":   "artifact",
	},
	"cwe": {
		"issues": "cwe",
	},
	"code_issue": {
		"cwe":  "issues",
		"scan": "issues",
	},
	"code_scan": {
		"release":         "code_scans",
		"entry":           "code_scan",
		"issues":          "scan",
		"vulnerabilities": "scans",
		"components":      "scans",
	},
	"component": {
		"vulnerabilities": "components",
		"licenses":        "components",
		"uses":            "component",
	},
	"commit": {
		"repo":    "commits",
		"release": "commit",
	},
	"license": {
		"components": "licenses",
		"uses":       "license",
	},
	"license_use": {
		"license": "uses",
	},
	"project": {
		"repos":                 "project",
		"releases":              "project",
		"vulnerability_reviews": "projects",
	},
	"release": {
		"subreleases":           "dependencies",
		"dependencies":          "subreleases",
		"project":               "releases",
		"commit":                "release",
		"log":                   "release",
		"artifacts":             "release",
		"components":            "release",
		"vulnerabilities":       "release",
		"code_scans":            "release",
		"test_runs":             "release",
		"vulnerability_reviews": "releases",
	},
	"release_component": {
		"release":   "components",
		"scans":     "components",
		"component": "uses",
	},
	"release_entry": {
		"artifact":  "entry",
		"code_scan": "entry",
		"test_run":  "entry",
		"release":   "log",
	},
	"release_vulnerability": {
		"vulnerability": "instances",
		"release":       "vulnerabilities",
		"reviews":       "instances",
		"scans":         "vulnerabilities",
	},
	"repo": {
		"project":               "repos",
		"commits":               "repo",
		"vulnerability_reviews": "repos",
	},
	"test_case": {
		"run": "tests",
	},
	"test_run": {
		"release": "test_runs",
		"entry":   "test_run",
		"tests":   "run",
	},
	"vulnerability": {
		"components": "vulnerabilities",
		"reviews":    "vulnerability",
		"instances":  "vulnerability",
	},
	"vulnerability_review": {
		"vulnerability": "reviews",
		"projects":      "vulnerability_reviews",
		"repos":         "vulnerability_reviews",
		"releases":      "vulnerability_reviews",
		"instances":     "reviews",
	},
}

var DataNodeSchemas = map[string]*HCLBodySpec{
	"_disjoint":             &AllDataNodesSchema,
	"artifact":              &ArtifactBodySpec,
	"cwe":                   &CWEBodySpec,
	"code_issue":            &CodeIssueBodySpec,
	"code_scan":             &CodeScanBodySpec,
	"component":             &ComponentBodySpec,
	"commit":                &GitCommitBodySpec,
	"license":               &LicenseBodySpec,
	"license_use":           &LicenseUseBodySpec,
	"project":               &ProjectBodySpec,
	"release":               &ReleaseBodySpec,
	"release_component":     &ReleaseComponentBodySpec,
	"release_entry":         &ReleaseEntryBodySpec,
	"release_vulnerability": &ReleaseVulnerabilityBodySpec,
	"repo":                  &RepoBodySpec,
	"test_case":             &TestCaseBodySpec,
	"test_run":              &TestRunBodySpec,
	"vulnerability":         &VulnerabilityBodySpec,
	"vulnerability_review":  &VulnerabilityReviewBodySpec,
}

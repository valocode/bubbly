// Code generated by entc, DO NOT EDIT.

package releaselicense

const (
	// Label holds the string label denoting the releaselicense type in the database.
	Label = "release_license"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// EdgeLicense holds the string denoting the license edge name in mutations.
	EdgeLicense = "license"
	// EdgeComponent holds the string denoting the component edge name in mutations.
	EdgeComponent = "component"
	// EdgeRelease holds the string denoting the release edge name in mutations.
	EdgeRelease = "release"
	// EdgeScans holds the string denoting the scans edge name in mutations.
	EdgeScans = "scans"
	// Table holds the table name of the releaselicense in the database.
	Table = "release_license"
	// LicenseTable is the table that holds the license relation/edge.
	LicenseTable = "release_license"
	// LicenseInverseTable is the table name for the License entity.
	// It exists in this package in order to avoid circular dependency with the "license" package.
	LicenseInverseTable = "license"
	// LicenseColumn is the table column denoting the license relation/edge.
	LicenseColumn = "release_license_license"
	// ComponentTable is the table that holds the component relation/edge.
	ComponentTable = "release_license"
	// ComponentInverseTable is the table name for the ReleaseComponent entity.
	// It exists in this package in order to avoid circular dependency with the "releasecomponent" package.
	ComponentInverseTable = "release_component"
	// ComponentColumn is the table column denoting the component relation/edge.
	ComponentColumn = "release_license_component"
	// ReleaseTable is the table that holds the release relation/edge.
	ReleaseTable = "release_license"
	// ReleaseInverseTable is the table name for the Release entity.
	// It exists in this package in order to avoid circular dependency with the "release" package.
	ReleaseInverseTable = "release"
	// ReleaseColumn is the table column denoting the release relation/edge.
	ReleaseColumn = "release_license_release"
	// ScansTable is the table that holds the scans relation/edge.
	ScansTable = "code_scan"
	// ScansInverseTable is the table name for the CodeScan entity.
	// It exists in this package in order to avoid circular dependency with the "codescan" package.
	ScansInverseTable = "code_scan"
	// ScansColumn is the table column denoting the scans relation/edge.
	ScansColumn = "release_license_scans"
)

// Columns holds all SQL columns for releaselicense fields.
var Columns = []string{
	FieldID,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "release_license"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"release_license_license",
	"release_license_component",
	"release_license_release",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

// Code generated by entc, DO NOT EDIT.

package vulnerability

const (
	// Label holds the string label denoting the vulnerability type in the database.
	Label = "vulnerability"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// EdgeCve holds the string denoting the cve edge name in mutations.
	EdgeCve = "cve"
	// Table holds the table name of the vulnerability in the database.
	Table = "vulnerability"
	// CveTable is the table that holds the cve relation/edge.
	CveTable = "vulnerability"
	// CveInverseTable is the table name for the CVE entity.
	// It exists in this package in order to avoid circular dependency with the "cve" package.
	CveInverseTable = "cve"
	// CveColumn is the table column denoting the cve relation/edge.
	CveColumn = "vulnerability_cve"
)

// Columns holds all SQL columns for vulnerability fields.
var Columns = []string{
	FieldID,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "vulnerability"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"vulnerability_cve",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

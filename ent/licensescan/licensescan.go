// Code generated by entc, DO NOT EDIT.

package licensescan

import (
	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the licensescan type in the database.
	Label = "license_scan"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTool holds the string denoting the tool field in the database.
	FieldTool = "tool"
	// EdgeRelease holds the string denoting the release edge name in mutations.
	EdgeRelease = "release"
	// EdgeEntry holds the string denoting the entry edge name in mutations.
	EdgeEntry = "entry"
	// EdgeLicenses holds the string denoting the licenses edge name in mutations.
	EdgeLicenses = "licenses"
	// Table holds the table name of the licensescan in the database.
	Table = "license_scan"
	// ReleaseTable is the table the holds the release relation/edge.
	ReleaseTable = "license_scan"
	// ReleaseInverseTable is the table name for the Release entity.
	// It exists in this package in order to avoid circular dependency with the "release" package.
	ReleaseInverseTable = "release"
	// ReleaseColumn is the table column denoting the release relation/edge.
	ReleaseColumn = "license_scan_release"
	// EntryTable is the table the holds the entry relation/edge.
	EntryTable = "license_scan"
	// EntryInverseTable is the table name for the ReleaseEntry entity.
	// It exists in this package in order to avoid circular dependency with the "releaseentry" package.
	EntryInverseTable = "release_entry"
	// EntryColumn is the table column denoting the entry relation/edge.
	EntryColumn = "release_entry_license_scan"
	// LicensesTable is the table the holds the licenses relation/edge.
	LicensesTable = "license_usage"
	// LicensesInverseTable is the table name for the LicenseUsage entity.
	// It exists in this package in order to avoid circular dependency with the "licenseusage" package.
	LicensesInverseTable = "license_usage"
	// LicensesColumn is the table column denoting the licenses relation/edge.
	LicensesColumn = "license_usage_scan"
)

// Columns holds all SQL columns for licensescan fields.
var Columns = []string{
	FieldID,
	FieldTool,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "license_scan"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"license_scan_release",
	"release_entry_license_scan",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/valocode/bubbly/ent/runtime"
//
var (
	Hooks [1]ent.Hook
	// ToolValidator is a validator for the "tool" field. It is called by the builders before save.
	ToolValidator func(string) error
)

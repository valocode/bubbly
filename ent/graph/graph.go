// Code generated by entc, DO NOT EDIT.

package graph

import (
	"time"

	"github.com/valocode/bubbly/ent/artifact"
	"github.com/valocode/bubbly/ent/codeissue"
	"github.com/valocode/bubbly/ent/cve"
	"github.com/valocode/bubbly/ent/release"
	"github.com/valocode/bubbly/ent/releaseentry"
)

type Graph struct {
	ArtifactNodes      []ArtifactNode
	CVENodes           []CVENode
	CVERuleNodes       []CVERuleNode
	CVEScanNodes       []CVEScanNode
	CWENodes           []CWENode
	CodeIssueNodes     []CodeIssueNode
	CodeScanNodes      []CodeScanNode
	ComponentNodes     []ComponentNode
	GitCommitNodes     []GitCommitNode
	LicenseNodes       []LicenseNode
	LicenseScanNodes   []LicenseScanNode
	LicenseUsageNodes  []LicenseUsageNode
	ProjectNodes       []ProjectNode
	ReleaseNodes       []ReleaseNode
	ReleaseEntryNodes  []ReleaseEntryNode
	RepoNodes          []RepoNode
	TestCaseNodes      []TestCaseNode
	TestRunNodes       []TestRunNode
	VulnerabilityNodes []VulnerabilityNode
}

type Node struct {
	Operation string
	ID        *int
}
type ArtifactNode struct {
	Node
	Name    *string
	Sha256  *string
	Type    *artifact.Type
	Release *ReleaseNode
	Entry   *ReleaseEntryNode
}
type CVENode struct {
	Node
	CveID         *string
	Description   *string
	SeverityScore *float64
	Severity      *cve.Severity
	PublishedData *time.Time
	ModifiedData  *time.Time
	Found         *VulnerabilityNode
	Rules         *CVERuleNode
}
type CVERuleNode struct {
	Node
	Name    *string
	Cve     *CVENode
	Project *ProjectNode
	Repo    *RepoNode
}
type CVEScanNode struct {
	Node
	Tool            *string
	Release         *ReleaseNode
	Entry           *ReleaseEntryNode
	Vulnerabilities *VulnerabilityNode
}
type CWENode struct {
	Node
	CweID       *string
	Description *string
	URL         *float64
	Issues      *CodeIssueNode
}
type CodeIssueNode struct {
	Node
	RuleID   *string
	Message  *string
	Severity *codeissue.Severity
	Type     *codeissue.Type
	Cwe      *CWENode
	Scan     *CodeScanNode
}
type CodeScanNode struct {
	Node
	Tool    *string
	Release *ReleaseNode
	Issues  *CodeIssueNode
	Entry   *ReleaseEntryNode
}
type ComponentNode struct {
	Node
	Name            *string
	Vendor          *string
	Version         *string
	Description     *string
	URL             *string
	Vulnerabilities *VulnerabilityNode
	Licenses        *LicenseNode
	Release         *ReleaseNode
}
type GitCommitNode struct {
	Node
	Hash    *string
	Branch  *string
	Tag     *string
	Time    *time.Time
	Repo    *RepoNode
	Release *ReleaseNode
}
type LicenseNode struct {
	Node
	SpdxID        *string
	Name          *string
	Reference     *string
	DetailsURL    *string
	IsOsiApproved *bool
	Components    *ComponentNode
	Usages        *LicenseUsageNode
}
type LicenseScanNode struct {
	Node
	Tool     *string
	Release  *ReleaseNode
	Entry    *ReleaseEntryNode
	Licenses *LicenseUsageNode
}
type LicenseUsageNode struct {
	Node
	License *LicenseNode
	Scan    *LicenseScanNode
}
type ProjectNode struct {
	Node
	Name     *string
	Repos    *RepoNode
	Releases *ReleaseNode
	CveRules *CVERuleNode
}
type ReleaseNode struct {
	Node
	Name         *string
	Version      *string
	Status       *release.Status
	Subreleases  *ReleaseNode
	Dependencies *ReleaseNode
	Project      *ProjectNode
	Commit       *GitCommitNode
	Artifacts    *ArtifactNode
	Log          *ReleaseEntryNode
	CodeScans    *CodeScanNode
	CveScans     *CVEScanNode
	LicenseScans *LicenseScanNode
	TestRuns     *TestRunNode
	Components   *ComponentNode
}
type ReleaseCheckNode struct {
	Node
	Release *ReleaseNode
}
type ReleaseEntryNode struct {
	Node
	Type        *releaseentry.Type
	Time        *time.Time
	Artifact    *ArtifactNode
	CodeScan    *CodeScanNode
	TestRun     *TestRunNode
	CveScan     *CVEScanNode
	LicenseScan *LicenseScanNode
	Release     *ReleaseNode
}
type RepoNode struct {
	Node
	Name     *string
	Project  *ProjectNode
	Commits  *GitCommitNode
	CveRules *CVERuleNode
}
type TestCaseNode struct {
	Node
	Name    *string
	Result  *bool
	Message *string
	Elapsed *float64
	Run     *TestRunNode
}
type TestRunNode struct {
	Node
	Tool    *string
	Release *ReleaseNode
	Entry   *ReleaseEntryNode
	Tests   *TestCaseNode
}
type VulnerabilityNode struct {
	Node
	Cve       *CVENode
	Scan      *CVEScanNode
	Component *ComponentNode
}

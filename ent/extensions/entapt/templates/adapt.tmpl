{{/* gotype: entgo.io/ent/entc/gen.Graph */}}

{{ define "adapter/adapter" }}
{{- with extend $ "Package" "adapter" -}}
    {{ template "header" . }}
{{ end }}
{{ $pkg := base $.Config.Package }}

type Mapping struct {
    {{- range $n := filterAdapterRootNodes $.Nodes }}
        {{ $n.Name }} *{{ $n.Name }}HCL `hcl:"{{ $n.Table }},block"`
    {{- end }}
}

type Result struct {
    ReleaseID *int `json:"release_id"`
    {{- range $n := filterAdapterRootNodes $.Nodes }}
        {{ $n.Name }} *{{ $n.Name }} `json:"{{ $n.Table }},omitempty"`
    {{- end }}
}

{{ range $n := filterAdapterNodes $.Nodes }}
    type  {{ $n.Name }}HCL struct {
    {{- range $f := $n.Fields }}
        {{- if $f.Optional }}
            {{ $f.StructField }} *{{ $f.Type }} `json:"{{ $f.Name }},omitempty" hcl:"{{ $f.Name }},attr"`
        {{- else }}
            {{ $f.StructField }} {{ $f.Type }} `json:"{{ $f.Name }},omitempty" hcl:"{{ $f.Name }},attr"`
        {{- end }}
    {{- end }}
    {{- range $e := filterAdapterEdges $n.Edges }}
        {{- if $e.Unique }}
            {{ $e.StructField }} *{{ $e.Type.Name }}HCL `json:"{{ $e.Name }},omitempty" hcl:"{{ $e.Name }},block"`
        {{- else }}
            {{ $e.StructField }} []{{ $e.Type.Name }}HCL `json:"{{ $e.Name }},omitempty" hcl:"{{ $e.Name }},block"`
        {{- end }}
    {{- end }}
    }
{{ end }}

{{ end }}
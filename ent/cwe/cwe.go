// Code generated by entc, DO NOT EDIT.

package cwe

const (
	// Label holds the string label denoting the cwe type in the database.
	Label = "cwe"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCweID holds the string denoting the cwe_id field in the database.
	FieldCweID = "cwe_id"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldURL holds the string denoting the url field in the database.
	FieldURL = "url"
	// EdgeIssues holds the string denoting the issues edge name in mutations.
	EdgeIssues = "issues"
	// Table holds the table name of the cwe in the database.
	Table = "cwe"
	// IssuesTable is the table that holds the issues relation/edge. The primary key declared below.
	IssuesTable = "code_issue_cwe"
	// IssuesInverseTable is the table name for the CodeIssue entity.
	// It exists in this package in order to avoid circular dependency with the "codeissue" package.
	IssuesInverseTable = "code_issue"
)

// Columns holds all SQL columns for cwe fields.
var Columns = []string{
	FieldID,
	FieldCweID,
	FieldDescription,
	FieldURL,
}

var (
	// IssuesPrimaryKey and IssuesColumn2 are the table columns denoting the
	// primary key for the issues relation (M2M).
	IssuesPrimaryKey = []string{"code_issue_id", "cwe_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// CweIDValidator is a validator for the "cwe_id" field. It is called by the builders before save.
	CweIDValidator func(string) error
)

// Code generated by entc, DO NOT EDIT.

package cverule

import (
	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the cverule type in the database.
	Label = "cve_rule"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// EdgeCve holds the string denoting the cve edge name in mutations.
	EdgeCve = "cve"
	// EdgeProject holds the string denoting the project edge name in mutations.
	EdgeProject = "project"
	// EdgeRepo holds the string denoting the repo edge name in mutations.
	EdgeRepo = "repo"
	// Table holds the table name of the cverule in the database.
	Table = "cve_rule"
	// CveTable is the table the holds the cve relation/edge.
	CveTable = "cve_rule"
	// CveInverseTable is the table name for the CVE entity.
	// It exists in this package in order to avoid circular dependency with the "cve" package.
	CveInverseTable = "cve"
	// CveColumn is the table column denoting the cve relation/edge.
	CveColumn = "cve_rule_cve"
	// ProjectTable is the table the holds the project relation/edge. The primary key declared below.
	ProjectTable = "cve_rule_project"
	// ProjectInverseTable is the table name for the Project entity.
	// It exists in this package in order to avoid circular dependency with the "project" package.
	ProjectInverseTable = "project"
	// RepoTable is the table the holds the repo relation/edge. The primary key declared below.
	RepoTable = "cve_rule_repo"
	// RepoInverseTable is the table name for the Repo entity.
	// It exists in this package in order to avoid circular dependency with the "repo" package.
	RepoInverseTable = "repo"
)

// Columns holds all SQL columns for cverule fields.
var Columns = []string{
	FieldID,
	FieldName,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "cve_rule"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"cve_rule_cve",
}

var (
	// ProjectPrimaryKey and ProjectColumn2 are the table columns denoting the
	// primary key for the project relation (M2M).
	ProjectPrimaryKey = []string{"cve_rule_id", "project_id"}
	// RepoPrimaryKey and RepoColumn2 are the table columns denoting the
	// primary key for the repo relation (M2M).
	RepoPrimaryKey = []string{"cve_rule_id", "repo_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/valocode/bubbly/ent/runtime"
//
var (
	Hooks [1]ent.Hook
)

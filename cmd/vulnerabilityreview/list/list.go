package list

import (
	"fmt"

	"github.com/ryanuber/columnize"
	"github.com/valocode/bubbly/client"
	"github.com/valocode/bubbly/env"
	"github.com/valocode/bubbly/store/api"

	"github.com/spf13/cobra"

	cmdutil "github.com/valocode/bubbly/cmd/util"
)

var (
	cmdLong = cmdutil.LongDesc(
		`
		List vulnerability reviews
		`,
	)

	cmdExamples = cmdutil.Examples(
		`
		# List vulnerability reviews

		bubbly vulnerabilityreview list
		bubbly vr list
		`,
	)
)

func New(bCtx *env.BubblyContext) *cobra.Command {

	cmd := &cobra.Command{
		Use:     "list [flags]",
		Short:   "List vulnerability reviews",
		Long:    cmdLong + "\n\n",
		Example: cmdExamples,
		Args:    cobra.NoArgs,
		RunE: func(cmd *cobra.Command, args []string) error {
			resp, err := client.GetVulnerabilityReviews(bCtx, &api.VulnerabilityReviewGetRequest{})
			if err != nil {
				return err
			}

			var reviewLines []string
			reviewLines = append(reviewLines, "ID | Decision | Note")
			for _, review := range resp.Reviews {
				reviewLines = append(reviewLines, fmt.Sprintf(
					"%d | %s | %s", *review.ID, review.Decision.String(), *review.Note,
				))
			}
			if len(resp.Reviews) == 0 {
				fmt.Println("No reviews")
			} else {
				fmt.Println(columnize.SimpleFormat(reviewLines))
			}
			return nil
		},
	}

	return cmd
}

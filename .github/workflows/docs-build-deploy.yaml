# on any Github Release, build and deploy docusaurus documentation
name: docs-build-deploy

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "**"
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
        working-directory: ./docs
      - run: npm run build --if-present
        working-directory: ./docs
      - name: Write version file
        working-directory: docs
        run: |
          # write version info to artifact
          echo "Built from GitHub repo ${{ github.repository }} version ${GITHUB_SHA::7}" > ./build/version.txt
      - name: Create artifact
        uses: actions/upload-artifact@v2
        with:
          name: bubbly-docs
          path: ./docs/build/
          retention-days: 1

  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    # only run on main branch
    if: github.ref == 'refs/heads/main' || github.event_name == 'release'

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: bubbly-docs
          path: ./docs
      - name: Write deploy variables
        id: vars
        run: |
          # set the deploy_env
          if [ "${{ github.event_name }}" == "release" ]
          then
              echo "::set-output name=deploy_env::prod"
          else
              echo "::set-output name=deploy_env::staging"
          fi
      - name: Dump deployment variables
        run: echo "${{ steps.vars.outputs.deploy_env }}"
      - uses: google-github-actions/setup-gcloud@master
        with:
          service_account_key: ${{ secrets.GCP_STORAGE_KEY }}
          export_default_credentials: true
      - name: Publish Documentation
        run: gsutil -m rsync -r -c -d ./docs gs://${{ steps.vars.outputs.deploy_env }}-website-storage

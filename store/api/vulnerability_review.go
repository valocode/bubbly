package api

import "github.com/valocode/bubbly/ent"

type (
	VulnerabilityReviewGetRequest struct {
		// Vulnerabilities contains a slice of vulnerability IDs.
		Vulnerabilities string `json:"vulnerabilities,omitempty" query:"vulnerabilities" mapstructure:"vulnerabilities"`
		Projects        string `json:"projects,omitempty" query:"projects" mapstructure:"projects"`
		Repos           string `json:"repos,omitempty" query:"repos" mapstructure:"repos"`
		Commit          string `json:"commit,omitempty" query:"commit" mapstructure:"commit"`

		WithProjects bool `json:"with_projects,omitempty" query:"with_projects" mapstructure:"with_projects"`
		WithRepos    bool `json:"with_repos,omitempty" query:"with_repos" mapstructure:"with_repos"`
	}

	VulnerabilityReviewGetResponse struct {
		Reviews []*VulnerabilityReview
	}

	VulnerabilityReviewSaveRequest struct {
		Review          *ent.VulnerabilityReviewModelCreate `json:"review,omitempty" validate:"required"`
		VulnerabilityID *string                             `json:"vulnerability_id,omitempty" validate:"required"`
		Affects         *VulnerabilityReviewAffects         `json:"affects,omitempty"`
	}

	VulnerabilityReviewUpdateRequest struct {
		ID      *int                                `json:"id,omitempty" validate:"required"`
		Review  *ent.VulnerabilityReviewModelUpdate `json:"review,omitempty" validate:"required"`
		Affects *VulnerabilityReviewAffects         `json:"affects,omitempty"`
	}

	// VulnerabilityReviewAffects defines the entities that a review should affect.
	// The Not* will remove the entity from the affects relationship (if exists).
	VulnerabilityReviewAffects struct {
		Projects    []string
		NotProjects []string

		Repos    []string
		NotRepos []string

		Commits    []string
		NotCommits []string
	}

	VulnerabilityReview struct {
		ent.VulnerabilityReviewModelRead
		Vulnerability *ent.VulnerabilityReviewModelRead
		Projects      []*ent.ProjectModelRead
		Repos         []*ent.RepositoryModelRead
		// Releases      []*ent.ReleaseModelRead
	}
)

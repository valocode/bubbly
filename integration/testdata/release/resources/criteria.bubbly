
resource "criteria" "gotest" {
    spec {
        input "release" {
            type = map(string)
        }

        // TODO: how to get specific test_run... e.g.:
        // release(filter_on: true, _id: "${self.input.release_id}") {
        //     project(filter_on: true, name: "bubbly") {
        //         name
        //     }
        // }
        query = <<EOT
            {
                test_run {
                    release(filter_on: true, name: "${self.input.release.name}", version: "${self.input.release.version}") {
                        name
                    }
                    result
                }
            }
        EOT
        condition "no_test_run" {
            message = "no test run found"
            value = length(self.query.value.test_run) > 0
        }
        
        condition "test_run_pass" {
            message = "test run failed"
            value = self.query.value.test_run[0].result == true
        }
    }
}

resource "criteria" "gosec" {
    spec {
        input "release" {
            type = map(string)
        }
        query = <<EOT
            {
                code_scan(tool: "gosec") {
                    release(filter_on: true, name: "${self.input.release.name}", version: "${self.input.release.version}") {
                        name
                    }

                    code_issue(severity: "high") {
                        severity
                    }
                }
            }
        EOT
        condition "no_code_scan" {
            message = "no code scan found"
            value = length(self.query.value.code_scan) > 0
        }
        condition "severity_high" {
            message = "severity high issues found"
            value = length(self.query.value.code_scan[0].code_issue) == 0
        }
    }
}

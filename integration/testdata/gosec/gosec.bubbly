resource "extract" "gosec" {
    spec {
        input "file" { type = string }

        type = "json"
        source {
            file = self.input.file
            format = object({
                Issues: list(object({
                  rule_id: string,
                  severity: string,
                  details: string,
                }))
            })
        }
    }
}

resource "transform" "gosec" {
    spec {
        input "results" { }

        data "code_scan" {
            fields {
                tool = "gosec"
            }
        }

        dynamic "data" {
            for_each = self.input.results["Issues"]
            labels = ["code_issue"]
            iterator = it
            content {
                fields {
                    id = it.value["rule_id"]
                    message = it.value["details"]
                    severity = lower(it.value["severity"])
                    type = "security"
                }
                joins = ["code_scan"]
            }
        }
    }
}

resource "load" "gosec" {
    spec {
        input "data" {}
        data = self.input.data
    }
}

resource "pipeline" "gosec" {
  spec {
    input "file" {
      default = "./testdata/gosec/results.json"
    }
    task "extract" {
      resource = "extract/gosec"
      input "file" {
        value = self.input.file
      }
    }
    task "transform" {
      resource = "transform/gosec"
      input "results" {
        value = self.task.extract.value
      }
    }
    task "load" {
      resource = "load/gosec"
      input "data" {
        value = self.task.transform.value
      }
    }
  }
}

resource "run" "gosec" {
    spec {
        resource = "pipeline/gosec"
    }
}
